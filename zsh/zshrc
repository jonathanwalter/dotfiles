zmodload zsh/zprof
# load zgen
source "${HOME}/.zgen/zgen.zsh"

# if the init scipt doesn't exist
if ! zgen saved; then
  echo "Creating a zgen save"

  # load oh-my-zsh
  zgen oh-my-zsh

  # oh-my-zsh plugins
  zgen oh-my-zsh plugins/git
  zgen oh-my-zsh plugins/colored-man-pages
  zgen oh-my-zsh plugins/colorize 
  # zgen oh-my-zsh plugins/command-not-found
  zgen oh-my-zsh plugins/catimg
  zgen oh-my-zsh plugins/compleat
  zgen oh-my-zsh plugins/docker
  zgen oh-my-zsh plugins/extract
  # zgen oh-my-zsh plugins/rsync
  # zgen oh-my-zsh plugins/screen
  zgen oh-my-zsh plugins/sudo
  # zgen oh-my-zsh plugins/sublime

  # osx specific plugins
  if [[ $(uname) = "Darwin" ]]; then
    # zgen oh-my-zsh plugins/brew
    # zgen oh-my-zsh plugins/osx
  fi

  # oh-my-zsh theme
  # zgen oh-my-zsh themes/steeef
  # zgen load denysdovhan/spaceship-prompt spaceship
  zgen load yardnsm/blox-zsh-theme

  # syntax highlight
  zgen load zsh-users/zsh-syntax-highlighting

  # completions
  zgen load zsh-users/zsh-autosuggestions
  zgen load zsh-users/zsh-history-substring-search
  zgen load zsh-users/zsh-completions src

  # other plugins
  zgen load djui/alias-tips
  zgen load jeanpantoja/dotpyvenv

  # generate the init script from plugins above
  zgen save
fi

# enable bash autocomplete
autoload -U +X bashcompinit && bashcompinit

# Azure-cli autocomplete
test -e "/usr/local/etc/bash_completion.d/az" && source /usr/local/etc/bash_completion.d/az

# thefuck
if which thefuck > /dev/null; then eval "$(thefuck --alias)"; fi


# make dir and cd into it
function mde() {
  if [ "$#" -eq "1" ]
  then
    mkdir -p $1 && cd $1
  else
    echo "Need exactly one argument"
  fi
}

# gitignore.io api
function gi() { 
  curl -L -s https://www.gitignore.io/api/$@
}

# make python3 virtual environment
function mkvenv() {
  python3 -m venv venv
  source venv/bin/activate
}

# Auto-reload for zgen
ZGEN_RESET_ON_CHANGE=(${HOME}/.zshrc ${HOME}/.zshrc.local)

# Homebrew path
export PATH="/usr/local/sbin:$PATH"

# Go paths
if which go > /dev/null; then export GOPATH=$(go env GOPATH); export PATH=$PATH:$(go env GOPATH)/bin; fi

# add ~/bin to path
export PATH="$HOME/bin:$PATH"

# autojump
[ -f /usr/local/etc/profile.d/autojump.sh ] && . /usr/local/etc/profile.d/autojump.sh

# iterm shell integration
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# load zshrc_local
test -e "${HOME}/.zshrc_local" && source "${HOME}/.zshrc_local"

# load alias file
test -e "${HOME}/.alias" && source "${HOME}/.alias"

# theme settings
BLOX_BLOCK__CWD_TRUNC=5

# linux specific stuff
if [[ $(uname) = "Linux" ]]; then
  source ~/.profile
fi

# osx specific stuff
if [[ $(uname) = "Darwin" ]]; then
  # see https://github.com/mobile-shell/mosh/issues/98#issuecomment-347985957
  export LC_CTYPE=en_US.UTF-8
fi


# ------------- THESE WILL SLOW YOU DOWN

# pyenv-virtualenv
# if which pyenv-virtualenv-init > /dev/null; then eval "$(pyenv virtualenv-init -)"; fi

# NVM
# https://github.com/creationix/nvm
# export NVM_DIR="$HOME/.nvm"
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
# [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# LESS SLOW THAN ABOVE
# https://www.growingwiththeweb.com/2018/01/slow-nvm-init.html
# Defer initialization of nvm until nvm, node or a node-dependent command is
# run. Ensure this block is only run once if .bashrc gets sourced multiple times
# by checking whether __init_nvm is a function.

# if [ -s "$HOME/.nvm/nvm.sh" ] && [ ! "$(whence -w __init_nvm)" = function ]; then
#   export NVM_DIR="$HOME/.nvm"
#   [ -s "$NVM_DIR/bash_completion" ] && . "$NVM_DIR/bash_completion"
#   declare -a __node_commands=('nvm' 'node' 'npm' 'yarn' 'gulp' 'grunt' 'webpack')
#   function __init_nvm() {
#     for i in "${__node_commands[@]}"; do unalias $i; done
#     . "$NVM_DIR"/nvm.sh
#     unset __node_commands
#     unset -f __init_nvm
#   }
#   for i in "${__node_commands[@]}"; do alias $i='__init_nvm && '$i; done
# fi
#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="/Users/jonathan/.sdkman"
[[ -s "/Users/jonathan/.sdkman/bin/sdkman-init.sh" ]] && source "/Users/jonathan/.sdkman/bin/sdkman-init.sh"
